global
    debug
    log /dev/log local0 debug
    log /dev/log local1 debug
    chroot /var/lib/haproxy
    stats socket /run/haproxy/admin.sock mode 660 level admin
    stats timeout 30s
    user haproxy
    group haproxy
    daemon
    tune.ssl.default-dh-param 2048
    maxconn 100000

    # Default SSL material locations
    ca-base /etc/ssl/certs
    crt-base /etc/ssl/private

    ssl-default-bind-ciphers ECDH+AESGCM:DH+AESGCM:ECDH+AES256:DH+AES256:ECDH+AES128:DH+AES:RSA+AESGCM:RSA+AES:!aNULL:!MD5:!DSS
    ssl-default-bind-options no-sslv3

defaults
    log global
    mode    http
    option  httplog
    option  http-server-close
    option  redispatch
    option  contstats
    option  logasap
    timeout tunnel  3600s
    timeout connect 5s
    timeout client  25s
    timeout server  25s
    timeout queue 30s
    timeout tarpit 60s
    timeout http-request 15s
    timeout http-keep-alive 1s
    errorfile 400 /etc/haproxy/errors/400.http
    errorfile 403 /etc/haproxy/errors/403.http
    errorfile 408 /etc/haproxy/errors/408.http
    errorfile 500 /etc/haproxy/errors/500.http
    errorfile 502 /etc/haproxy/errors/502.http
    errorfile 503 /etc/haproxy/errors/503.http
    errorfile 504 /etc/haproxy/errors/504.http

    option httpchk GET /
    stats enable
    stats hide-version
    # stats auth user:NxgYjfYdqh2mE4
    stats uri /gQVQBBbRep9zoIBiA8jEi0vbrWCleeJ1dx0BQ6Iy

    default-server init-addr last,libc,none

frontend explorer
    bind *:80
    bind *:443 ssl crt /etc/ssl/private/cloudflare-origin.pem alpn h2,http/1.1
    mode http

    #Set CSP to make JS works
    http-response set-header Content-Security-Policy "connect-src 'self' wss://*.blockscout.com wss://blockscout.com; default-src 'self' *.google-analytics.com *.googleapis.com  *.gstatic.com *.googletagmanager.com; script-src 'self' https://blockscout.matomo.cloud https://cdn.jsdelivr.net https://www.google-analytics.com https://ajax.cloudflare.com https://www.googletagmanager.com https://nico-amsterdam.github.io 'unsafe-inline' 'unsafe-eval' ; style-src 'self' 'unsafe-inline' 'unsafe-eval' * https://blockscout.matomo.cloud https://cdn.jsdelivr.net https://fonts.googleapis.com https://nico-amsterdam.github.io; img-src 'self' * data:; font-src 'self' 'unsafe-inline' 'unsafe-eval' https://cdn.jsdelivr.net https://fonts.gstatic.com data:;"
    http-response set-header X-Frame-Options ALLOWALL
    http-response set-header Access-Control-Allow-Origin *

    #Check for WebSocket
    acl is_upgrade hdr(Connection) -i upgrade
    acl is_websocket hdr(Upgrade) -i websocket

    #Check for network type
    acl is_poa path_beg -i /poa
    acl is_etc path_beg -i /etc
    acl is_eth path_beg -i /eth
    acl is_lukso path_beg -i /lukso
#    acl is_aerum path_beg -i /aerum
#    acl is_callisto path_beg -i /callisto
    acl is_rsk path_beg -i /rsk

    #Check for network name
    acl is_core     path_beg -i /poa/core
    acl is_sokol    path_beg -i /poa/sokol
    acl is_dai      path_beg -i /poa/dai
    acl is_xdai     path_beg -i /poa/xdai
    acl is_classic  path_beg -i /etc/mainnet
    acl is_kovan    path_beg -i /eth/kovan
    acl is_ropsten  path_beg -i /eth/ropsten
    acl is_rinkeby  path_beg -i /eth/rinkeby
    acl is_goerli   path_beg -i /eth/goerli
#    acl is_mainnet_rpc_api      path -i /eth/mainnet/api
#    acl is_mainnet_eth_rpc_api  path -i /eth/mainnet/api/eth_rpc
#    acl is_mainnet_graphiql     path -i /eth/mainnet/graphiql
#    acl is_verify_api urlp(action) verify
#    acl is_eth_block_number urlp(action) eth_block_number
    acl is_mainnet_tx_path path_beg -i /eth/mainnet/tx
    acl is_mainnet  path_beg -i /eth/mainnet
    acl is_l14      path_beg -i /lukso/l14
#    acl is_aerum_mainnet  path_beg -i /aerum/mainnet
#    acl is_callisto_mainnet  path_beg -i /callisto/mainnet
    acl is_rsk_mainnet  path_beg -i /rsk/mainnet

    #Check for cookies
    acl is_cookie                   hdr_sub(cookie) network
    acl is_cookie_core              hdr_sub(cookie) network=core
    acl is_cookie_sokol             hdr_sub(cookie) network=sokol
    acl is_cookie_dai               hdr_sub(cookie) network=dai
    acl is_cookie_classic           hdr_sub(cookie) network=classic
    acl is_cookie_kovan             hdr_sub(cookie) network=kovan
#    acl is_cookie_ropsten           hdr_sub(cookie) network=ropsten
#    acl is_cookie_rinkeby           hdr_sub(cookie) network=rinkeby
#    acl is_cookie_goerli            hdr_sub(cookie) network=goerli
#    acl is_cookie_mainnet           hdr_sub(cookie) network=mainnet
    acl is_cookie_l14               hdr_sub(cookie) network=l14
#    acl is_cookie_aerum_mainnet     hdr_sub(cookie) network=aerum_mainnet
#    acl is_cookie_callisto_mainnet  hdr_sub(cookie) network=callisto_mainnet
    acl is_cookie_rsk_mainnet       hdr_sub(cookie) network=rsk_mainnet

    #Default backends
    use_backend core               if is_core
    use_backend sokol              if is_sokol
    http-request redirect code 301 location "https://%[hdr(host)]%[url,regsub(^/poa/dai,/poa/xdai,)]\r\nX-Frame-Options: ALLOWALL\r\nAccess-Control-Allow-Origin: *" if is_dai !is_websocket
    use_backend dai                if is_xdai or is_dai
    use_backend classic            if is_classic
    use_backend kovan              if is_kovan
#    http-request redirect code 302 location https://kovan.etherscan.io%[url,regsub(^/eth/kovan,)] set-cookie network=dai if is_kovan
#    use_backend ropsten            if is_ropsten
    http-request redirect code 302 location https://ropsten.etherscan.io%[url,regsub(^/eth/ropsten,)] set-cookie network=dai if is_ropsten
#    use_backend rinkeby            if is_rinkeby
    http-request redirect code 302 location https://rinkeby.etherscan.io%[url,regsub(^/eth/rinkeby,)] set-cookie network=dai if is_rinkeby
#    use_backend goerli             if is_goerli
    http-request redirect code 302 location https://goerli.etherscan.io%[url,regsub(^/eth/goerli,)] set-cookie network=dai if is_goerli
#    use_backend mainnet            if is_mainnet
    http-request redirect code 302 location https://blockchair.com%[url,regsub(^/eth/mainnet/tx,/ethereum/transaction)] set-cookie network=dai if is_mainnet_tx_path
    http-request redirect code 302 location https://blockchair.com%[url,regsub(^/eth/mainnet,/ethereum)] set-cookie network=dai if is_mainnet !is_mainnet_tx_path
#    use_backend mainnet            if is_mainnet !is_mainnet_rpc_api !is_mainnet_eth_rpc_api !is_mainnet_graphiql or is_mainnet is_verify_api or is_mainnet is_eth_block_number
#    use_backend mainnet_api        if !is_verify_api !is_eth_block_number is_mainnet_rpc_api or is_mainnet_eth_rpc_api or is_mainnet_graphiql
    use_backend l14                if is_l14
#    use_backend aerum_mainnet      if is_aerum_mainnet
#    use_backend callisto_mainnet   if is_callisto_mainnet
    use_backend rsk_mainnet        if is_rsk_mainnet

    #WebSocket backends
    use_backend core_ws              if  is_cookie_core              is_websocket
    use_backend sokol_ws             if  is_cookie_sokol             is_websocket
    use_backend dai_ws               if  is_cookie_dai               is_websocket
    use_backend classic_ws           if  is_cookie_classic           is_websocket
    use_backend kovan_ws             if  is_cookie_kovan             is_websocket
#    use_backend ropsten_ws           if  is_cookie_ropsten           is_websocket
#    use_backend rinkeby_ws           if  is_cookie_rinkeby           is_websocket
#    use_backend goerli_ws            if  is_cookie_goerli            is_websocket
#    use_backend mainnet_ws           if  is_cookie_mainnet           is_websocket
    use_backend l14_ws               if  is_cookie_l14               is_websocket
#    use_backend aerum_mainnet_ws     if  is_cookie_aerum_mainnet     is_websocket
#    use_backend callisto_mainnet_ws  if  is_cookie_callisto_mainnet  is_websocket
    use_backend rsk_mainnet_ws       if  is_cookie_rsk_mainnet       is_websocket

    #default redirect
    redirect prefix /poa/xdai  if !is_websocket !is_poa !is_etc !is_eth !is_lukso !is_rsk !is_cookie

    #redirect for networks
    redirect prefix /poa/core         if !is_websocket !is_poa !is_etc !is_eth !is_lukso !is_rsk is_cookie_core
    redirect prefix /poa/sokol        if !is_websocket !is_poa !is_etc !is_eth !is_lukso !is_rsk is_cookie_sokol
    redirect prefix /poa/xdai         if !is_websocket !is_poa !is_etc !is_eth !is_lukso !is_rsk is_cookie_dai
    redirect prefix /etc/mainnet      if !is_websocket !is_poa !is_etc !is_eth !is_lukso !is_rsk is_cookie_classic
    redirect prefix /eth/kovan        if !is_websocket !is_poa !is_etc !is_eth !is_lukso !is_rsk is_cookie_kovan
#    redirect prefix /eth/ropsten      if !is_websocket !is_poa !is_etc !is_eth !is_lukso !is_rsk is_cookie_ropsten
#    redirect prefix /eth/rinkeby      if !is_websocket !is_poa !is_etc !is_eth !is_lukso !is_rsk is_cookie_rinkeby
#    redirect prefix /eth/goerli       if !is_websocket !is_poa !is_etc !is_eth !is_lukso !is_rsk is_cookie_goerli
#    redirect prefix /eth/mainnet      if !is_websocket !is_poa !is_etc !is_eth !is_lukso !is_rsk is_cookie_mainnet
    redirect prefix /lukso/l14        if !is_websocket !is_poa !is_etc !is_eth !is_lukso !is_rsk is_cookie_l14
#    redirect prefix /aerum/mainnet    if !is_websocket !is_poa !is_etc !is_eth !is_lukso !is_rsk is_cookie_aerum_mainnet
#    redirect prefix /callisto/mainnet if !is_websocket !is_poa !is_etc !is_eth !is_lukso !is_rsk is_cookie_callisto_mainnet
    redirect prefix /rsk/mainnet      if !is_websocket !is_poa !is_etc !is_eth !is_lukso !is_rsk is_cookie_rsk_mainnet

    default_backend dai

backend core
    #Proxy mode
    mode http

    #Backend queries should not have network prefix, so we delete it
    acl is_core path_beg /poa/core
    reqirep ^([^\ ].*)poa/core[/]?(.*) \1\2 if is_core

    #Setting headers to mask our query
    http-request set-header X-Forwarded-Host %[req.hdr(Host)]
    http-request set-header X-Client-IP %[src]
    http-request set-header Host core-ubw4pa.blockscout.com

    #Specifying cookie to insert
    cookie network insert

    #Server list. Format:
    #server <name> <address>:<port> cookie <network_name> check inter 60000 fastinter 1000 fall 3 rise 3 ssl verify none
    server core_alpha core-ubw4pa.blockscout.com:443 cookie core check inter 60000 fastinter 1000 fall 3 rise 3 ssl verify none

backend core_ws
    #Check if WebSocket request is correct
    acl hdr_websocket_key      hdr_cnt(Sec-WebSocket-Key)      eq 1
    acl hdr_websocket_version  hdr_cnt(Sec-WebSocket-Version)  eq 1
    http-request deny if ! hdr_websocket_key ! hdr_websocket_version

    #WebSockets should be forwarded, not http proxied
    option forwardfor

    #Setting headers to mask our query
    http-request set-header Host core-ubw4pa.blockscout.com
    http-request set-header Origin https://core-ubw4pa.blockscout.com

    #Specifying cookie to insert
    cookie network insert

    #Server list. Format:
    #server <name> <address>:<port> cookie <network_name> check inter 60000 fastinter 1000 fall 3 rise 3 check inter 60000 fastinter 1000 fall 3 rise 3 ssl verify none maxconn 30000
    server default core-ubw4pa.blockscout.com:443 cookie core check inter 60000 fastinter 1000 fall 3 rise 3 ssl verify none maxconn 30000

backend sokol
    #Proxy mode
    mode http

    #Backend queries should not have network prefix, so we delete it
    acl is_sokol path_beg /poa/sokol
    reqirep ^([^\ ].*)poa/sokol[/]?(.*) \1\2 if is_sokol

    #Setting headers to mask our query
    http-request set-header X-Forwarded-Host %[req.hdr(Host)]
    http-request set-header X-Client-IP %[src]
    http-request set-header Host sokol-np6yvh.blockscout.com

    #Specifying cookie to insert
    cookie network insert

    #Server list. Format:
    #server <name> <address>:<port> cookie <network_name> check inter 60000 fastinter 1000 fall 3 rise 3 ssl verify none
    server sokol_alpha sokol-np6yvh.blockscout.com:443 cookie sokol check inter 60000 fastinter 1000 fall 3 rise 3 ssl verify none

backend sokol_ws
    #Check if WebSocket request is correct
    acl hdr_websocket_key      hdr_cnt(Sec-WebSocket-Key)      eq 1
    acl hdr_websocket_version  hdr_cnt(Sec-WebSocket-Version)  eq 1
    http-request deny if ! hdr_websocket_key ! hdr_websocket_version

    #WebSockets should be forwarded, not http proxied
    option forwardfor

    #Setting headers to mask our query
    http-request set-header Host sokol-np6yvh.blockscout.com
    http-request set-header Origin https://sokol-np6yvh.blockscout.com

    #Specifying cookie to insert
    cookie network insert

    #Server list. Format:
    #server <name> <address>:<port> cookie <network_name> check inter 60000 fastinter 1000 fall 3 rise 3 check inter 60000 fastinter 1000 fall 3 rise 3 ssl verify none maxconn 30000
    server sokol_alpha sokol-np6yvh.blockscout.com:443 cookie sokol check inter 60000 fastinter 1000 fall 3 rise 3 check inter 60000 fastinter 1000 fall 3 rise 3 ssl verify none maxconn 30000

backend classic
    #Proxy mode
    mode http

    #Backend queries should not have network prefix, so we delete it
    acl is_classic path_beg /etc/mainnet
    reqirep ^([^\ ].*)etc/mainnet[/]?(.*) \1\2 if is_classic

    #Setting headers to mask our query
    http-request set-header X-Forwarded-Host %[req.hdr(Host)]
    http-request set-header X-Client-IP %[src]
    http-request set-header Host etc-zs1y7u.blockscout.com

    #Specifying cookie to insert
    cookie network insert

    #Server list. Format:
    #server <name> <address>:<port> cookie <network_name> check inter 60000 fastinter 1000 fall 3 rise 3 ssl verify none
    server classic_alpha etc-zs1y7u.blockscout.com:443 cookie classic check inter 60000 fastinter 1000 fall 3 rise 3 ssl verify none

backend classic_ws
    #Check if WebSocket request is correct
    acl hdr_websocket_key      hdr_cnt(Sec-WebSocket-Key)      eq 1
    acl hdr_websocket_version  hdr_cnt(Sec-WebSocket-Version)  eq 1
    http-request deny if ! hdr_websocket_key ! hdr_websocket_version

    #WebSockets should be forwarded, not http proxied
    option forwardfor

    #Setting headers to mask our query
    http-request set-header Host etc-zs1y7u.blockscout.com
    http-request set-header Origin https://etc-zs1y7u.blockscout.com

    #Specifying cookie to insert
    cookie network insert

    #Server list. Format:
    #server <name> <address>:<port> cookie <network_name> check inter 60000 fastinter 1000 fall 3 rise 3 check inter 60000 fastinter 1000 fall 3 rise 3 ssl verify none maxconn 30000
    server classic_alpha etc-zs1y7u.blockscout.com:443 cookie classic check inter 60000 fastinter 1000 fall 3 rise 3 check inter 60000 fastinter 1000 fall 3 rise 3 ssl verify none maxconn 30000

backend kovan
    #Proxy mode
    mode http

    #Backend queries should not have network prefix, so we delete it
    acl is_kovan path_beg /eth/kovan
    reqirep ^([^\ ].*)eth/kovan[/]?(.*) \1\2 if is_kovan

    #Setting headers to mask our query
    http-request set-header X-Forwarded-Host %[req.hdr(Host)]
    http-request set-header X-Client-IP %[src]
    http-request set-header Host kovan-ams8bq.blockscout.com

    #Specifying cookie to insert
    cookie network insert

    #Server list. Format:
    #server <name> <address>:<port> cookie <network_name> check inter 60000 fastinter 1000 fall 3 rise 3 ssl verify none
    server kovan_alpha kovan-ams8bq.blockscout.com:443 cookie kovan check inter 60000 fastinter 1000 fall 3 rise 3 ssl verify none

backend kovan_ws
    #Check if WebSocket request is correct
    acl hdr_websocket_key      hdr_cnt(Sec-WebSocket-Key)      eq 1
    acl hdr_websocket_version  hdr_cnt(Sec-WebSocket-Version)  eq 1
    http-request deny if ! hdr_websocket_key ! hdr_websocket_version

    #WebSockets should be forwarded, not http proxied
    option forwardfor

    #Setting headers to mask our query
    http-request set-header Host kovan-ams8bq.blockscout.com
    http-request set-header Origin https://kovan-ams8bq.blockscout.com

    #Specifying cookie to insert
    cookie network insert

    #Server list. Format:
    #server <name> <address>:<port> cookie <network_name> check inter 60000 fastinter 1000 fall 3 rise 3 check inter 60000 fastinter 1000 fall 3 rise 3 ssl verify none maxconn 30000
    server kovan_alpha kovan-ams8bq.blockscout.com:443 cookie kovan check inter 60000 fastinter 1000 fall 3 rise 3 check inter 60000 fastinter 1000 fall 3 rise 3 ssl verify none maxconn 30000

backend ropsten
    #Proxy mode
    mode http

    #Backend queries should not have network prefix, so we delete it
    acl is_ropsten path_beg /eth/ropsten
    reqirep ^([^\ ].*)eth/ropsten[/]?(.*) \1\2 if is_ropsten

    #Setting headers to mask our query
    http-request set-header X-Forwarded-Host %[req.hdr(Host)]
    http-request set-header X-Client-IP %[src]
    http-request set-header Host ropsten-lvu6lk.blockscout.com

    #Specifying cookie to insert
    cookie network insert

    #Server list. Format:
    #server <name> <address>:<port> cookie <network_name> check inter 60000 fastinter 1000 fall 3 rise 3 ssl verify none
    server ropsten_alpha ropsten-lvu6lk.blockscout.com:443 cookie ropsten check inter 60000 fastinter 1000 fall 3 rise 3 ssl verify none

backend ropsten_ws
    #Check if WebSocket request is correct
    acl hdr_websocket_key      hdr_cnt(Sec-WebSocket-Key)      eq 1
    acl hdr_websocket_version  hdr_cnt(Sec-WebSocket-Version)  eq 1
    http-request deny if ! hdr_websocket_key ! hdr_websocket_version

    #WebSockets should be forwarded, not http proxied
    option forwardfor

    #Setting headers to mask our query
    http-request set-header Host ropsten-lvu6lk.blockscout.com
    http-request set-header Origin https://ropsten-lvu6lk.blockscout.com

    #Specifying cookie to insert
    cookie network insert

    #Server list. Format:
    #server <name> <address>:<port> cookie <network_name> check inter 60000 fastinter 1000 fall 3 rise 3 check inter 60000 fastinter 1000 fall 3 rise 3 ssl verify none maxconn 30000
    server ropsten_alpha ropsten-lvu6lk.blockscout.com:443 cookie ropsten check inter 60000 fastinter 1000 fall 3 rise 3 check inter 60000 fastinter 1000 fall 3 rise 3 ssl verify none maxconn 30000

backend rinkeby
    #Proxy mode
    mode http

    #Backend queries should not have network prefix, so we delete it
    acl is_rinkeby path_beg /eth/rinkeby
    reqirep ^([^\ ].*)eth/rinkeby[/]?(.*) \1\2 if is_rinkeby

    #Setting headers to mask our query
    http-request set-header X-Forwarded-Host %[req.hdr(Host)]
    http-request set-header X-Client-IP %[src]
    http-request set-header Host rinkeby-md0j4a.blockscout.com

    #Specifying cookie to insert
    cookie network insert

    #Server list. Format:
    #server <name> <address>:<port> cookie <network_name> check inter 60000 fastinter 1000 fall 3 rise 3 ssl verify none
    server rinkeby_alpha rinkeby-md0j4a.blockscout.com:443 cookie rinkeby check inter 60000 fastinter 1000 fall 3 rise 3 ssl verify none

backend rinkeby_ws
    #Check if WebSocket request is correct
    acl hdr_websocket_key      hdr_cnt(Sec-WebSocket-Key)      eq 1
    acl hdr_websocket_version  hdr_cnt(Sec-WebSocket-Version)  eq 1
    http-request deny if ! hdr_websocket_key ! hdr_websocket_version

    #WebSockets should be forwarded, not http proxied
    option forwardfor

    #Setting headers to mask our query
    http-request set-header Host rinkeby-md0j4a.blockscout.com
    http-request set-header Origin https://rinkeby-md0j4a.blockscout.com

    #Specifying cookie to insert
    cookie network insert

    #Server list. Format:
    #server <name> <address>:<port> cookie <network_name> check inter 60000 fastinter 1000 fall 3 rise 3 check inter 60000 fastinter 1000 fall 3 rise 3 ssl verify none maxconn 30000
    server rinkeby_alpha rinkeby-md0j4a.blockscout.com:443 cookie rinkeby check inter 60000 fastinter 1000 fall 3 rise 3 check inter 60000 fastinter 1000 fall 3 rise 3 ssl verify none maxconn 30000

backend goerli
    #Proxy mode
    mode http

    #Backend queries should not have network prefix, so we delete it
    acl is_goerli path_beg /eth/goerli
    reqirep ^([^\ ].*)eth/goerli[/]?(.*) \1\2 if is_goerli

    #Setting headers to mask our query
    http-request set-header X-Forwarded-Host %[req.hdr(Host)]
    http-request set-header X-Client-IP %[src]
    http-request set-header Host goerli-b7h4jk.blockscout.com

    #Specifying cookie to insert
    cookie network insert

    #Server list. Format:
    #server <name> <address>:<port> cookie <network_name> check inter 60000 fastinter 1000 fall 3 rise 3 ssl verify none
    server goerli_alpha goerli-b7h4jk.blockscout.com:443 cookie goerli check inter 60000 fastinter 1000 fall 3 rise 3 ssl verify none

backend goerli_ws
    #Check if WebSocket request is correct
    acl hdr_websocket_key      hdr_cnt(Sec-WebSocket-Key)      eq 1
    acl hdr_websocket_version  hdr_cnt(Sec-WebSocket-Version)  eq 1
    http-request deny if ! hdr_websocket_key ! hdr_websocket_version

    #WebSockets should be forwarded, not http proxied
    option forwardfor

    #Setting headers to mask our query
    http-request set-header Host goerli-b7h4jk.blockscout.com
    http-request set-header Origin https://goerli-b7h4jk.blockscout.com

    #Specifying cookie to insert
    cookie network insert

    #Server list. Format:
    #server <name> <address>:<port> cookie <network_name> check inter 60000 fastinter 1000 fall 3 rise 3 check inter 60000 fastinter 1000 fall 3 rise 3 ssl verify none maxconn 30000
    server goerli_alpha goerli-b7h4jk.blockscout.com:443 cookie goerli check inter 60000 fastinter 1000 fall 3 rise 3 check inter 60000 fastinter 1000 fall 3 rise 3 ssl verify none maxconn 30000

backend mainnet
    #Proxy mode
    mode http

    #Backend queries should not have network prefix, so we delete it
    acl is_mainnet path_beg /eth/mainnet
    reqirep ^([^\ ].*)eth/mainnet[/]?(.*) \1\2 if is_mainnet

    #Setting headers to mask our query
    http-request set-header X-Forwarded-Host %[req.hdr(Host)]
    http-request set-header X-Client-IP %[src]
    http-request set-header Host mainnet-q9vj5o.blockscout.com

    #Specifying cookie to insert
    cookie network insert

    #Server list. Format:
    #server <name> <address>:<port> cookie <network_name> check inter 60000 fastinter 1000 fall 3 rise 3 ssl verify none
    server mainnet_alpha mainnet-q9vj5o.blockscout.com:443 cookie mainnet check inter 60000 fastinter 1000 fall 3 rise 3 ssl verify none

#backend mainnet_api
#    #Proxy mode
#    mode http
#
#    #Backend queries should not have network prefix, so we delete it
#    acl is_mainnet path_beg /eth/mainnet
#    reqirep ^([^\ ].*)eth/mainnet[/]?(.*) \1\2 if is_mainnet
#
#    #Setting headers to mask our query
#    http-request set-header X-Forwarded-Host %[req.hdr(Host)]
#    http-request set-header X-Client-IP %[src]
#    http-request set-header Host mainnet-api-rc69on.blockscout.com
#
#    #Specifying cookie to insert
#    cookie network insert
#
#    #Server list. Format:
#    #server <name> <address>:<port> cookie <network_name> check inter 60000 fastinter 1000 fall 3 rise 3 ssl verify none
#    server mainnet_alpha mainnet-api-rc69on.blockscout.com:443 cookie mainnet check inter 60000 fastinter 1000 fall 3 rise 3 ssl verify none

backend mainnet_ws
    #Check if WebSocket request is correct
    acl hdr_websocket_key      hdr_cnt(Sec-WebSocket-Key)      eq 1
    acl hdr_websocket_version  hdr_cnt(Sec-WebSocket-Version)  eq 1
    http-request deny if ! hdr_websocket_key ! hdr_websocket_version

    #WebSockets should be forwarded, not http proxied
    option forwardfor

    #Setting headers to mask our query
    http-request set-header Host mainnet-q9vj5o.blockscout.com
    http-request set-header Origin https://mainnet-q9vj5o.blockscout.com

    #Specifying cookie to insert
    cookie network insert

    #Server list. Format:
    #server <name> <address>:<port> cookie <network_name> check inter 60000 fastinter 1000 fall 3 rise 3 check inter 60000 fastinter 1000 fall 3 rise 3 ssl verify none maxconn 30000
    server mainnet_alpha mainnet-q9vj5o.blockscout.com:443 cookie mainnet check inter 60000 fastinter 1000 fall 3 rise 3 check inter 60000 fastinter 1000 fall 3 rise 3 ssl verify none maxconn 30000

backend dai
    #Proxy mode
    mode http

    #Backend queries should not have network prefix, so we delete it
    acl is_xdai path_beg /poa/xdai
    acl is_dai path_beg /poa/dai
    reqirep ^([^\ ].*)poa/xdai[/]?(.*) \1\2 if is_xdai
    reqirep ^([^\ ].*)poa/dai[/]?(.*) \1\2 if is_dai

    #Setting headers to mask our query
    http-request set-header X-Forwarded-Host %[req.hdr(Host)]
    http-request set-header X-Client-IP %[src]
    http-request set-header Host dai-phbx85.blockscout.com

    #Specifying cookie to insert
    cookie network insert

    #Server list. Format:
    #server <name> <address>:<port> cookie <network_name> check inter 60000 fastinter 1000 fall 3 rise 3 ssl verify none
    server dai_alpha dai-phbx85.blockscout.com:443 cookie dai check inter 60000 fastinter 1000 fall 3 rise 3 ssl verify none

backend dai_ws
    #Check if WebSocket request is correct
    acl hdr_websocket_key      hdr_cnt(Sec-WebSocket-Key)      eq 1
    acl hdr_websocket_version  hdr_cnt(Sec-WebSocket-Version)  eq 1
    http-request deny if ! hdr_websocket_key ! hdr_websocket_version

    acl is_xdai path_beg /poa/xdai
    reqirep ^([^\ ].*)poa/xdai[/]?(.*) \1\2 if is_xdai

    #WebSockets should be forwarded, not http proxied
    option forwardfor

    #Setting headers to mask our query
    http-request set-header Host dai-phbx85.blockscout.com
    http-request set-header Origin https://dai-phbx85.blockscout.com

    #Specifying cookie to insert
    cookie network insert

    #Server list. Format:
    #server <name> <address>:<port> cookie <network_name> check inter 60000 fastinter 1000 fall 3 rise 3 check inter 60000 fastinter 1000 fall 3 rise 3 ssl verify none maxconn 30000
    server dai_alpha dai-phbx85.blockscout.com:443 cookie dai check inter 60000 fastinter 1000 fall 3 rise 3 check inter 60000 fastinter 1000 fall 3 rise 3 ssl verify none maxconn 30000

backend l14
    #Proxy mode
    mode http

    #Backend queries should not have network prefix, so we delete it
    acl is_l14 path_beg /lukso/l14
    reqirep ^([^\ ].*)lukso/l14[/]?(.*) \1\2 if is_l14

    #Setting headers to mask our query
    http-request set-header X-Forwarded-Host %[req.hdr(Host)]
    http-request set-header X-Client-IP %[src]
    http-request set-header Host l14-rdlot3.blockscout.com

    #Specifying cookie to insert
    cookie network insert

    #Server list. Format:
    #server <name> <address>:<port> cookie <network_name> check inter 60000 fastinter 1000 fall 3 rise 3 ssl verify none
    server l14_alpha l14-rdlot3.blockscout.com:443 cookie l14 check inter 60000 fastinter 1000 fall 3 rise 3 ssl verify none

backend l14_ws
    #Check if WebSocket request is correct
    acl hdr_websocket_key      hdr_cnt(Sec-WebSocket-Key)      eq 1
    acl hdr_websocket_version  hdr_cnt(Sec-WebSocket-Version)  eq 1
    http-request deny if ! hdr_websocket_key ! hdr_websocket_version

    #WebSockets should be forwarded, not http proxied
    option forwardfor

    #Setting headers to mask our query
    http-request set-header Host l14-rdlot3.blockscout.com
    http-request set-header Origin https://l14-rdlot3.blockscout.com

    #Specifying cookie to insert
    cookie network insert

    #Server list. Format:
    #server <name> <address>:<port> cookie <network_name> check inter 60000 fastinter 1000 fall 3 rise 3 check inter 60000 fastinter 1000 fall 3 rise 3 ssl verify none maxconn 30000
    server l14_alpha l14-rdlot3.blockscout.com:443 cookie l14 check inter 60000 fastinter 1000 fall 3 rise 3 check inter 60000 fastinter 1000 fall 3 rise 3 ssl verify none maxconn 30000

#backend aerum_mainnet
#    #Proxy mode
#    mode http
#
#    #Backend queries should not have network prefix, so we delete it
#    acl is_aerum_mainnet path_beg /aerum/mainnet
#    reqirep ^([^\ ].*)aerum/mainnet[/]?(.*) \1\2 if is_aerum_mainnet
#
#    #Setting headers to mask our query
#    http-request set-header X-Forwarded-Host %[req.hdr(Host)]
#    http-request set-header X-Client-IP %[src]
#    http-request set-header Host blockscout.com
#
#    #Specifying cookie to insert
#    cookie network insert
#
#    #Server list. Format:
#    #server <name> <address>:<port> cookie <network_name> check inter 60000 fastinter 1000 fall 3 rise 3 ssl verify none
#    server aerum_mainnet aaa.blockscout.com:443 cookie aerum_mainnet check inter 60000 fastinter 1000 fall 3 rise 3 ssl verify none
#
#backend aerum_mainnet_ws
#    #Check if WebSocket request is correct
#    acl hdr_websocket_key      hdr_cnt(Sec-WebSocket-Key)      eq 1
#    acl hdr_websocket_version  hdr_cnt(Sec-WebSocket-Version)  eq 1
#    http-request deny if ! hdr_websocket_key ! hdr_websocket_version
#
#    #WebSockets should be forwarded, not http proxied
#    option forwardfor
#
#    #Setting headers to mask our query
#    http-request set-header Host aerum-um9od2.blockscout.com
#    http-request set-header Origin https://blockscout.com
#
#    #Specifying cookie to insert
#    cookie network insert
#
#    #Server list. Format:
#    #server <name> <address>:<port> cookie <network_name> check inter 60000 fastinter 1000 fall 3 rise 3 check inter 60000 fastinter 1000 fall 3 rise 3 ssl verify none maxconn 30000
#    server default aaa.blockscout.com:443 cookie aerum_mainnet check inter 60000 fastinter 1000 fall 3 rise 3 ssl verify none maxconn 30000

#backend callisto_mainnet
#    #Proxy mode
#    mode http
#
#    #Backend queries should not have network prefix, so we delete it
#    acl is_callisto_mainnet path_beg /callisto/mainnet
#    reqirep ^([^\ ].*)callisto/mainnet[/]?(.*) \1\2 if is_callisto_mainnet
#
#    #Setting headers to mask our query
#    http-request set-header X-Forwarded-Host %[req.hdr(Host)]
#    http-request set-header X-Client-IP %[src]
#    http-request set-header Host callisto-6my3f4.blockscout.com
#
#    #Specifying cookie to insert
#    cookie network insert
#
#    #Server list. Format:
#    #server <name> <address>:<port> cookie <network_name> check inter 60000 fastinter 1000 fall 3 rise 3 ssl verify none
#    server callisto_mainnet callisto-6my3f4.blockscout.com:443 cookie callisto_mainnet check inter 60000 fastinter 1000 fall 3 rise 3 ssl verify none
#
#backend callisto_mainnet_ws
#    #Check if WebSocket request is correct
#    acl hdr_websocket_key      hdr_cnt(Sec-WebSocket-Key)      eq 1
#    acl hdr_websocket_version  hdr_cnt(Sec-WebSocket-Version)  eq 1
#    http-request deny if ! hdr_websocket_key ! hdr_websocket_version
#
#    #WebSockets should be forwarded, not http proxied
#    option forwardfor
#
#    #Setting headers to mask our query
#    http-request set-header Host callisto-6my3f4.blockscout.com
#    http-request set-header Origin https://callisto-6my3f4.blockscout.com
#
#    #Specifying cookie to insert
#    cookie network insert
#
#    #Server list. Format:
#    #server <name> <address>:<port> cookie <network_name> check inter 60000 fastinter 1000 fall 3 rise 3 check inter 60000 fastinter 1000 fall 3 rise 3 ssl verify none maxconn 30000
#    server default callisto-6my3f4.blockscout.com:443 cookie callisto_mainnet check inter 60000 fastinter 1000 fall 3 rise 3 ssl verify none maxconn 30000

backend rsk_mainnet
    #Proxy mode
    mode http

    #Backend queries should not have network prefix, so we delete it
    acl is_rsk_mainnet path_beg /rsk/mainnet
    reqirep ^([^\ ].*)rsk/mainnet[/]?(.*) \1\2 if is_rsk_mainnet

    #Setting headers to mask our query
    http-request set-header X-Forwarded-Host %[req.hdr(Host)]
    http-request set-header X-Client-IP %[src]
    http-request set-header Host rsk-w2iex5.blockscout.com

    #Specifying cookie to insert
    cookie network insert

    #Server list. Format:
    #server <name> <address>:<port> cookie <network_name> check inter 60000 fastinter 1000 fall 3 rise 3 ssl verify none
    server rsk_mainnet rsk-w2iex5.blockscout.com:443 cookie rsk_mainnet check inter 60000 fastinter 1000 fall 3 rise 3 ssl verify none

backend rsk_mainnet_ws
    #Check if WebSocket request is correct
    acl hdr_websocket_key      hdr_cnt(Sec-WebSocket-Key)      eq 1
    acl hdr_websocket_version  hdr_cnt(Sec-WebSocket-Version)  eq 1
    http-request deny if ! hdr_websocket_key ! hdr_websocket_version

    #WebSockets should be forwarded, not http proxied
    option forwardfor

    #Setting headers to mask our query
    http-request set-header Host rsk-w2iex5.blockscout.com
    http-request set-header Origin https://rsk-w2iex5.blockscout.com

    #Specifying cookie to insert
    cookie network insert

    #Server list. Format:
    #server <name> <address>:<port> cookie <network_name> check inter 60000 fastinter 1000 fall 3 rise 3 check inter 60000 fastinter 1000 fall 3 rise 3 ssl verify none maxconn 30000
    server default rsk-w2iex5.blockscout.com:443 cookie rsk_mainnet check inter 60000 fastinter 1000 fall 3 rise 3 ssl verify none maxconn 30000



